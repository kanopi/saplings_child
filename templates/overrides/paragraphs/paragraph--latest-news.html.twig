{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished',
    content.field_featured_post[0] is not empty ? 'featured-pr',
    content.field_featured_post[0] is empty ? 'default-pr'
  ]
%}

{% set container_class_string = 'container' %}
{% if paragraph.sa_container.value is not empty %}
  {% set container_class_string = ' ' ~ paragraph.sa_container.value %}
{% endif %}

{% set width_class_string = '' %}
{% if paragraph.sa_width.value is not empty %}
  {% set width_class_string = ' ' ~ paragraph.sa_width.value %}
{% endif %}

{% set margin_class_string = '' %}
{% if paragraph.sa_margin.value is not empty %}
  {% set margin_class_string = ' ' ~ paragraph.sa_margin.value %}
{% endif %}

{% set padding_class_string = '' %}
{% if paragraph.sa_padding.value is not empty %}
  {% set padding_class_string = ' ' ~ paragraph.sa_padding.value %}
{% endif %}

{% set bg_class_string = '' %}
{% if paragraph.sa_background.value is not empty %}
  {% set bg_class_string = ' ' ~ paragraph.sa_background.value %}
{% endif %}

{% block paragraph %}
  <div{{attributes.addClass(classes)}}>
    <div class="container-md {{ bg_class_string }}{{ margin_class_string }}{{ padding_class_string }}">
      {% if paragraph.sa_width.value is not empty %}
        <div class="row justify-content-center">
          <div class="{{ width_class_string }}">
          {% endif %}
          {% if paragraph.sa_header.value is not empty %}
            <div class="row align-items-center p-b-xl flex-column-reverse flex-md-row">
              <div class="col-md-6 ps-lg-3 ps-md-5 pe-lg-3 pe-md-5 mt-3 mt-lg-0">{{ content.sa_header }}</div>
              <div class="col-md-6 p-0">
                {% if content.field_featured_post[0] is not empty %}
                  {{ drupal_entity('node', content.field_featured_post[0]['#node'].nid.value, 'latest_news_featured_image') }}
                {% else %}
                  {# Type Attachment #}
                  {% if content.field_latest_news_view.0.contents['#display_id'] == 'block_1' %}
                    {{ drupal_view('latest_news', 'attachment_1', content.field_latest_news_view.0['#content']['#arguments'].0) }}
                  {% endif %}
                {% endif %}
              </div>
            </div>
          {% endif %}
          <div class="container">
            {% block content %}
              <div class="press-release-cards d-flex">
                {{ content|without('sa_header', 'sa_margin', 'sa_link' )  }}
              </div>
            {% endblock %}
            <div class="text-center">
              {{ content.sa_link }}
            </div>
          </div>
        </div>

        {% if paragraph.sa_width.value is not empty %}
        </div>
      </div>
    {% endif %}
  </div>
</div>{% endblock paragraph %}
